@model WebApp.Models.Order
@{  ViewBag.Title = "订单管理 | Create";}
<!-- MAIN CONTENT -->
<div id="content">
    <!-- quick navigation bar -->
    <div class="row">
        <div class="col-xs-12 col-sm-7 col-md-7 col-lg-4">
            <h1 class="page-title txt-color-blueDark">
                <i class="fa fa-table fa-fw "></i>
                @{ 
                  //TODO:fix quick navigation path
                 }
                路径
                <span>
                    >
                    订单管理
                </span>
            </h1>
        </div>
        <div class="col-xs-12 col-sm-5 col-md-5 col-lg-8">
        </div>
    </div>
    <!-- end quick navigation bar -->
    <!-- NEW WIDGET START -->
    <article class="col-sm-12 col-md-12 col-lg-12">
        <!-- Widget ID (each widget will need unique ID)-->
        <div class="jarviswidget" id="wid-id-1" data-widget-colorbutton="false" data-widget-editbutton="false" data-widget-custombutton="false">
            <!-- widget options:
            usage: <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false">
            data-widget-colorbutton="false"
            data-widget-editbutton="false"
            data-widget-togglebutton="false"
            data-widget-deletebutton="false"
            data-widget-fullscreenbutton="false"
            data-widget-custombutton="false"
            data-widget-collapsed="true"
            data-widget-sortable="false"
            -->
            <header>
                <span class="widget-icon"> <i class="fa fa-edit"></i> </span>
                <h2> 订单管理 </h2>
            </header>
            <!-- widget div-->
            <div>
                <!-- widget edit box -->
                <div class="jarviswidget-editbox">
                    <!-- This area used as dropdown edit box -->
                </div>
                <!-- end widget edit box -->
                <!-- widget content -->
                <div class="widget-body no-padding">
                     <!-- form toolbar -->
                        <div id="form_toolbar" style="height:auto" class="datagrid-toolbar">
                                <a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'fa fa-plus',plain:true" onclick="createitem()">新增</a>
                                <a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'fa fa-trash-o',plain:true" onclick="removeitem()">删除</a>
                                <a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'fa fa-floppy-o',plain:true" onclick="saveitem()">保存</a>
                                <a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'fa fa-undo',plain:true" onclick="reject()">取消</a>
                                <a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'icon-paperclip',plain:true" onclick="importexcel()">EXCEL 导入</a>
                                <a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'fa fa-file-excel-o',plain:true" onclick="exportexcel()">导出 Excel</a>
                                <a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'fa fa-refresh',plain:true" onclick="refresh()">刷新</a>
                         </div>
                        <!--end form toolbar-->
                    <form id="order_form" class="smart-form  easyui-form" method="post" data-options="novalidate:true">
                                @Html.Partial("EditForm")
                        </form>		 
                 </div>
                 <!-- end widget content -->
                 </div>
            <!-- end widget div -->
        </div>
        <!-- end widget -->
    </article>
    <!-- WIDGET END -->
</div>
<!-- END MAIN CONTENT -->
@section Scripts {
     <script type="text/javascript">
	   //create new item
        function createitem() {

        }
        //delete item
        function deleteitem() {

        }
        //save item
        function saveitem() {
			   if ($("#order_form").form("enableValidation").form("validate")) {						
                 var item = $("#order_form").serializeObject();
				  				  //获取明细表数据
				   
						if (!orderdetails_endEditing())
								return false;                    
                        var orderdetails = $orderdetailsdatagrid.datagrid("getChanges");
						data.OrderDetails = orderdetails ;
				  				                   $.post("/Orders/Create", item, function (response) {						
                     //console.log(response);						
                     if (response.success) {						
                         $.messager.alert("提示", "保存成功！");						
                     } else {						
                         $.messager.alert("错误", "保存失败！" + response.err, "error");						
                     }						
                 }, "json").fail(function (response) {						
                     //console.log(response);						
                     $.messager.alert("错误", "保存失败！", "error");						
                     //$dg.datagrid("reload");						
                 });						
             }						
        }
        function reject() {
        }
        function importexcel() {
        }
        function exportexcel() {
        }
        function refresh() {
        }
        </script>
<script type="text/javascript">
	    
	//==============$("#orderdetails_datagrid")=================// 
    var $orderdetailsdatagrid = $("#orderdetails_datagrid")
	var orderdetailseditIndex = undefined;
    function orderdetails_endEditing() {
        if ( orderdetailseditIndex == undefined) { return true }
        if ($orderdetailsdatagrid.datagrid("validateRow", orderdetailseditIndex)) {
			            var ed = $orderdetailsdatagrid.datagrid("getEditor", { index: orderdetailseditIndex, field: "ProductId" });
            var ProductName = $(ed.target).combobox("getText");
            var ProductId = $(ed.target).combobox("getValue");
            $orderdetailsdatagrid.datagrid("getRows")[orderdetailseditIndex]["ProductName"] = ProductName;
            $orderdetailsdatagrid.datagrid("getRows")[orderdetailseditIndex]["ProductId"] = ProductId;
						$orderdetailsdatagrid.datagrid("endEdit", orderdetailseditIndex);
            orderdetailseditIndex = undefined;
            return true;
        } else {
            return false;
        }
    }
    function orderdetails_onClickCell(index, field) {
        if (orderdetailseditIndex != index) {
            if (orderdetails_endEditing()) {
                $orderdetailsdatagrid.datagrid("selectRow", index)
                        .datagrid("beginEdit", index);
                var ed = $orderdetailsdatagrid.datagrid("getEditor", { index: index, field: field });
                if (ed) {
                    ($(ed.target).data("textbox") ? $(ed.target).textbox("textbox") : $(ed.target)).focus();
                }
                orderdetailseditIndex  = index;
            } else {
                $orderdetailsdatagrid.datagrid("selectRow", orderdetailseditIndex);
            }
        }
    }
    function orderdetails_append() {
        if (orderdetails_endEditing()) {
            $orderdetailsdatagrid.datagrid("appendRow", { Status:0   });
            orderdetailseditIndex = $orderdetailsdatagrid.datagrid("getRows").length - 1;
            $orderdetailsdatagrid.datagrid("selectRow", orderdetailseditIndex )
                    .datagrid("beginEdit", orderdetailseditIndex);
        }
    }
    function orderdetails_removeit() {
        if (orderdetailseditIndex  == undefined) { return }
        $orderdetailsdatagrid.datagrid("cancelEdit", orderdetailseditIndex )
                .datagrid("deleteRow", orderdetailseditIndex );
        orderdetailseditIndex = undefined;
    }
    function orderdetails_reject() {
        $orderdetailsdatagrid.datagrid("rejectChanges");
        orderdetailseditIndex  = undefined;
    }
    function orderdetails_getChanges() {
        var rows = $orderdetailsdatagrid.datagrid("getChanges");
        alert(rows.length + " rows are changed!");
    }
	  	$(function () {
			$.get("/Orders/GetOrderDetailsByOrderId/" + @Model.Id,function(data){
            //console.log(data);
            $orderdetailsdatagrid.datagrid("loadData",data);
        })
		});
</script>
}
