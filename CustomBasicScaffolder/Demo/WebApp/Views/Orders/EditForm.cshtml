

@model WebApp.Models.Order

 
 @*@Html.HiddenFor(model => model.Id)*@

        <div class="form-group">
            @Html.LabelFor(model => model.Customer, htmlAttributes: new { @class = "col-md-2 control-label " })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Customer, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Customer,"" , new { @class = "text-danger" })
            </div>
        </div>
		
        <div class="form-group">
            @Html.LabelFor(model => model.ShippingAddress, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ShippingAddress, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ShippingAddress,"" , new { @class = "text-danger" })
            </div>
        </div>
		
        <div class="form-group">
            @Html.LabelFor(model => model.OrderDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OrderDate, "Date")
                @Html.ValidationMessageFor(model => model.OrderDate,"" , new { @class = "text-danger" })
            </div>
        </div>
		

	<div class="tabs-container">
    <!-- Nav tabs -->
        <ul class="nav nav-tabs">
            <li class="active"><a data-toggle="tab" href="#tab-OrderDetails"> OrderDetails</a></li>
        </ul>
    <!-- Tab panes -->
        <div class="tab-content">


            <div id="tab-OrderDetails" class="tab-pane active">

                <div class="panel-body">

                    <table id="orderdetail_datagrid" class="easyui-datagrid" title="OrderDetails DataGrid" style="width:auto;height:400px"
                           data-options="
                 rownumbers:true,
                 iconCls: 'fa fa-list',
                remoteFilter: false,
                singleSelect: true,
                toolbar: '#orderdetail_toolbar',
                method: 'get',
                onClickCell: onClickCell,
                pagination: 'true'
                   ">
                        <thead>
                            <tr>
                                @*<th data-options="field:'ck',checkbox:true"></th>*@
                                <th data-options="field:'Id',width:80">Order Detail Id</th>
                                <th data-options="field:'ProductId',width:100,
                                                formatter:function(value,row){
                                                    return row.ProductName;
                                                },
                                                editor:{
                                                    type:'combobox',
                                                    options:{
                                                        valueField:'Id',
                                                        textField:'Name',
                                                        method:'get',
                                                        url:'/Orders/GetProducts',
                                                        required:true
                                                    }
                                                }">ProductId</th>







                                <th data-options="field:'Qty',width:100,align:'right',editor:{type:'numberbox',options:{precision:0}}">Qty</th>


                                <th data-options="field:'Price',width:100,align:'right',editor:{type:'numberbox',options:{precision:0}}">Price</th>

                                <th data-options="field:'Amount',width:100,align:'right',editor:{type:'numberbox',options:{precision:2}}">Amount</th>

                                @*<th data-options="field:'OrderId',width:100,
                                                formatter:function(value,row){
                                                    return row.OrderId;
                                                },
                                                editor:{
                                                    type:'combobox',
                                                    options:{
                                                        valueField:'Id',
                                                        textField:'Customer',
                                                        method:'get',
                                                        url:'/Orders/GetOrders',
                                                        required:true
                                                    }
                                                }">OrderId</th>*@





                            </tr>
                        </thead>


                    </table>
                    <div id="orderdetail_toolbar" style="height:auto">
                        <a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'icon-add',plain:true" onclick="append()">Append</a>
                        <a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'icon-remove',plain:true" onclick="removeit()">Remove</a>
                        @*<a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'icon-save',plain:true" onclick="accept()">Accept</a>*@
                        <a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'icon-undo',plain:true" onclick="reject()">Reject</a>
                        @*<a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'icon-search',plain:true" onclick="getChanges()">GetChanges</a>*@
                    </div>
            </div>
                </div>


        </div>
        </div>
 

 



<script type="text/javascript">

   
    var editIndex = undefined;
    function endEditing() {
        if (editIndex == undefined) { return true }
        if ($orderdetailstable.datagrid('validateRow', editIndex)) {

            var ed = $orderdetailstable.datagrid('getEditor', { index: editIndex, field: 'ProductId' });
            var productname = $(ed.target).combobox('getText');
            var productid = $(ed.target).combobox('getValue');
            //console.log(categoryname, categoryid);
            //console.log(1,$orderdetailstable.datagrid('getRows')[editIndex]);
            $orderdetailstable.datagrid('getRows')[editIndex]['ProductName'] = productname;
            $orderdetailstable.datagrid('getRows')[editIndex]['ProductId'] = productid;
            $orderdetailstable.datagrid('endEdit', editIndex);
            //console.log(2,$orderdetailstable.datagrid('getRows')[editIndex]);

            editIndex = undefined;


            return true;
        } else {
            return false;
        }
    }
    function onClickCell(index, field) {
        if (editIndex != index) {
            if (endEditing()) {
                $orderdetailstable.datagrid('selectRow', index)
                        .datagrid('beginEdit', index);
                var ed = $orderdetailstable.datagrid('getEditor', { index: index, field: field });
                if (ed) {
                    ($(ed.target).data('textbox') ? $(ed.target).textbox('textbox') : $(ed.target)).focus();
                }
                editIndex = index;
            } else {
                $orderdetailstable.datagrid('selectRow', editIndex);
            }
        }
    }
    function append() {
        if (endEditing()) {
            $orderdetailstable.datagrid('appendRow', { status: 'P' });
            editIndex = $orderdetailstable.datagrid('getRows').length - 1;
            $orderdetailstable.datagrid('selectRow', editIndex)
                    .datagrid('beginEdit', editIndex);
        }
    }
    function removeit() {
        if (editIndex == undefined) { return }
        $orderdetailstable.datagrid('cancelEdit', editIndex)
                .datagrid('deleteRow', editIndex);
        editIndex = undefined;
    }
    //function accept() {
    //    if (endEditing()) {
    //        if ($orderdetailstable.datagrid('getChanges').length) {
    //            var inserted = $orderdetailstable.datagrid('getChanges', "inserted");
    //            var deleted = $orderdetailstable.datagrid('getChanges', "deleted");
    //            var updated = $orderdetailstable.datagrid('getChanges', "updated");
    //            var effectRow = new Object();
    //            if (inserted.length) {
    //                effectRow.inserted = inserted;
    //            }
    //            if (deleted.length) {
    //                effectRow.deleted = deleted;
    //            }
    //            if (updated.length) {
    //                effectRow.updated = updated;
    //            }
    //            console.log(JSON.stringify(effectRow));
    //            $.post("/Products/SaveData", effectRow, function (rsp) {
    //                console.log(rsp);
    //                if (rsp.Success) {
    //                    $.messager.alert("提示", "提交成功！");
    //                    $orderdetailstable.datagrid('acceptChanges');
    //                }
    //            }, "JSON").error(function () {
    //                $.messager.alert("错误", "提交错误了！", 'error');

    //            });

    //        }

    //        $orderdetailstable.datagrid('acceptChanges');
    //    }
    //}
    function reject() {
        $orderdetailstable.datagrid('rejectChanges');
        editIndex = undefined;
    }
    function getChanges() {
        var rows = $orderdetailstable.datagrid('getChanges');
        alert(rows.length + ' rows are changed!');
    }

    $(function () {
        
        $orderdetailstable.datagrid('loading');
        $.get('/Orders/GetOrderDetailsByOrderId/' + @Model.Id, function (data) {
            //console.log(data);
            if ($.isArray(data)){    // is array
                data = {
                    total: data.length,
                    rows: data
                }

                $orderdetailstable.datagrid('loadData', data);
            }
            $orderdetailstable.datagrid('loaded');

        })
    });
</script>



