﻿



@model WebApp.Models.Order


 @*@Html.HiddenFor(model => model.Id)*@




        <div class="form-group">
            @Html.LabelFor(model => model.Customer,   htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                                @Html.EditorFor(model => model.Customer, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Customer,"" , new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.ShippingAddress,   htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                                @Html.EditorFor(model => model.ShippingAddress, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ShippingAddress,"" , new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.OrderDate,   htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                                @Html.EditorFor(model => model.OrderDate, "Date" ,new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.OrderDate,"" , new { @class = "text-danger" })
            </div>
        </div>

		   

 


     <!-- details tabs -->
    <div class="tabs-container">
        <!-- Nav tabs -->
        <ul class="nav nav-tabs">
								<li class="active"><a data-toggle="tab" href="#tab-orderdetails"> OrderDetails</a></li>
								        
			 
   
		 </ul>
		 <!-- Tab panes -->
         <div class="tab-content">
		  		  <div id="tab-orderdetails" class="tab-pane active">

            <div class="panel-body">

                <div class="table-responsive">
				<table id="orderdetails_datagrid" class="easyui-datagrid" title="OrderDetails DataGrid" style="width:auto;height:400px"
                       data-options="
                            rownumbers:true,
                            iconCls: 'fa fa-list',
                            remoteFilter: false,
                            singleSelect: true,
                            toolbar: '#orderdetails_toolbar',
                            method: 'get',
                            onClickCell: orderdetails_onClickCell,
                            pagination: 'true'
                    " >
                    <thead>
                        <tr>
						@*<th data-options="field:'ck',checkbox:true"></th>*@
				        
														<th data-options="field:'Id',width:80"> Id </th>
											
														<th data-options="field:'ProductId',width:100,
												formatter:function(value,row){
													return row.ProductName;
												},
												editor:{
													type:'combobox',
													options:{
														valueField:'Id',
														textField:'Name',
														method:'get',
														url:'/Orders/GetProducts',
														required:false
														}
												}"> 产品 </th>

           
											
						
																<th data-options="field:'Qty',width:100,align:'right',editor:{type:'numberbox',options:{precision:0}} ,sortable:true,resizable:true ">数量</th>
							
											
						
																<th data-options="field:'Price',width:100,align:'right',editor:{type:'numberbox',options:{precision:0}} ,sortable:true,resizable:true ">单价</th>
							
											
						
																<th data-options="field:'Amount',width:100,align:'right',editor:{type:'numberbox',options:{precision:0}} ,sortable:true,resizable:true ">金额</th>
							
											
														<th data-options="field:'OrderId',width:100,
												formatter:function(value,row){
													return row.OrderCustomer;
												},
												editor:{
													type:'combobox',
													options:{
														valueField:'Id',
														textField:'Customer',
														method:'get',
														url:'/Orders/GetOrders',
														required:false
														}
												}"> 订单 </th>

           
											                           
                        </tr>
                    </thead>
                </table>

				<div id="orderdetails_toolbar" style="height:auto">
                    <a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'icon-add',plain:true" onclick="orderdetails_append()">Append</a>
                    <a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'icon-remove',plain:true" onclick="orderdetails_removeit()">Remove</a>
                    @*<a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'icon-save',plain:true" onclick="orderdetails_accept()">Accept</a>*@
                    <a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'icon-undo',plain:true" onclick="orderdetails_reject()">Reject</a>
                    @*<a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'icon-search',plain:true" onclick="orderdetails_getChanges()">GetChanges</a>*@
                </div>

                </div>
            </div>

		  	</div>
	</div>
	</div>
<!--end details tabs -->
 

 <script type="text/javascript">
	
	    
	var orderdetailseditIndex = undefined;
    function orderdetails_endEditing() {
        if ( orderdetailseditIndex == undefined) { return true }
        if ($orderdetailsdatagrid.datagrid('validateRow', orderdetailseditIndex)) {
			            var ed = $orderdetailsdatagrid.datagrid('getEditor', { index: orderdetailseditIndex, field: 'OrderId' });
            var OrderCustomer = $(ed.target).combobox('getText');
            var OrderId = $(ed.target).combobox('getValue');
          
            $orderdetailsdatagrid.datagrid('getRows')[orderdetailseditIndex]['OrderCustomer'] = OrderCustomer;
            $orderdetailsdatagrid.datagrid('getRows')[orderdetailseditIndex]['OrderId'] = OrderId;
            
            
			            var ed = $orderdetailsdatagrid.datagrid('getEditor', { index: orderdetailseditIndex, field: 'ProductId' });
            var ProductName = $(ed.target).combobox('getText');
            var ProductId = $(ed.target).combobox('getValue');
          
            $orderdetailsdatagrid.datagrid('getRows')[orderdetailseditIndex]['ProductName'] = ProductName;
            $orderdetailsdatagrid.datagrid('getRows')[orderdetailseditIndex]['ProductId'] = ProductId;
            
            
						$orderdetailsdatagrid.datagrid('endEdit', orderdetailseditIndex);
            orderdetailseditIndex = undefined;


            return true;
        } else {
            return false;
        }
    }
    function orderdetails_onClickCell(index, field) {
        if (orderdetailseditIndex != index) {
            if (orderdetails_endEditing()) {
                $orderdetailsdatagrid.datagrid('selectRow', index)
                        .datagrid('beginEdit', index);
                var ed = $orderdetailsdatagrid.datagrid('getEditor', { index: index, field: field });
                if (ed) {
                    ($(ed.target).data('textbox') ? $(ed.target).textbox('textbox') : $(ed.target)).focus();
                }
                orderdetailseditIndex  = index;
            } else {
                $orderdetailsdatagrid.datagrid('selectRow', orderdetailseditIndex);
            }
        }
    }
    function orderdetails_append() {
        if (orderdetails_endEditing()) {
            $orderdetailsdatagrid.datagrid('appendRow', { Status:0   });
            orderdetailseditIndex = $orderdetailsdatagrid.datagrid('getRows').length - 1;
            $orderdetailsdatagrid.datagrid('selectRow', orderdetailseditIndex )
                    .datagrid('beginEdit', orderdetailseditIndex);
        }
    }
    function orderdetails_removeit() {
        if (orderdetailseditIndex  == undefined) { return }
        $orderdetailsdatagrid.datagrid('cancelEdit', orderdetailseditIndex )
                .datagrid('deleteRow', orderdetailseditIndex );
        orderdetailseditIndex = undefined;
    }
   
    function orderdetails_reject() {
        $orderdetailsdatagrid.datagrid('rejectChanges');
        orderdetailseditIndex  = undefined;
    }
    function orderdetails_getChanges() {
        var rows = $orderdetailsdatagrid.datagrid('getChanges');
        alert(rows.length + ' rows are changed!');
    }


	  
	$(function () {
	
		$.get('/Orders/GetOrderDetailsByOrderId/' + @Model.Id,function(data){
            //console.log(data);
            $orderdetailsdatagrid.datagrid('loadData',data);
        
        })


	
	});
</script>



