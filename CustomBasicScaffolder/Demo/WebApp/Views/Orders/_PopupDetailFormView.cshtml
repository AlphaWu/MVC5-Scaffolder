﻿@model WebApp.Models.Order
<!-- 输出form表单界面 -->
<div id="detailswindow" hidden="hidden" class="easyui-window"
     title="明细数据"
     data-options="modal:true,
                    closed:true,
                    iconcls:'icon-menu',
                    onOpen:resize" style="width:960px;height:520px">
    <form id="order_form" class="smart-form easyui-form" method="post" data-options="novalidate:true">
        <table class="table table-bordered">
            <caption>
                <!--form toolbar-->
                <div id="form_toolbar" style="height:auto" class="datagrid-toolbar">
                    <a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'icon-save',plain:true" onclick="saveitem()">保存</a>
                    <a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'icon-undo',plain:true" onclick="cancelitem()">取消</a>
                    <a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'icon-refresh',plain:true" onclick="refreshitem()">刷新</a>
                </div>
                <!--form toolbar-->
            </caption>
            <tr>
                <td class="control-label">   @Html.DisplayNameFor(model => model.Id)  </td>
                <td>
                    <input id="@Html.IdFor(model => model.Id)"
                           name="@Html.NameFor(model => model.Id)"
                           value="@Html.ValueFor(model => model.Id)"
                           tabindex="0"
                           class="easyui-numberbox" type="text"
                           data-options="prompt:'Id',
                                 readonly:true,
                                width:200,
                                 label:'',required:true ,precision:0" />
                </td>
                <td class="control-label">   @Html.DisplayNameFor(model => model.Customer)  </td>
                <td>
                    <input id="@Html.IdFor(model => model.Customer)"
                           name="@Html.NameFor(model => model.Customer)"
                           value="@Html.ValueFor(model => model.Customer)"
                           tabindex="1"
                           class="easyui-textbox"
                           type="text"
                           data-options="prompt:'客户',
								 label:'',
                                width:200,
								 required:true ,validType:'length[0,20]'" />
                </td>
            </tr>
            <tr>
                <td class="control-label">   @Html.DisplayNameFor(model => model.ShippingAddress)  </td>
                <td>
                    <input id="@Html.IdFor(model => model.ShippingAddress)"
                           name="@Html.NameFor(model => model.ShippingAddress)"
                           value="@Html.ValueFor(model => model.ShippingAddress)"
                           tabindex="2"
                           class="easyui-textbox"
                           type="text"
                           data-options="prompt:'发货地址',
								 label:'',
                                width:200,
								 required:true ,validType:'length[0,50]'" />
                </td>
                <td class="control-label">   @Html.DisplayNameFor(model => model.OrderDate)  </td>
                <td>
                    <input id="@Html.IdFor(model => model.OrderDate)"
                           name="@Html.NameFor(model => model.OrderDate)"
                           tabindex="3"
                           class="easyui-datebox"
                           type="text"
                           value="@Html.ValueFor(model => model.OrderDate)"
                           data-options="prompt:'订单日期',
								 label:'',
                                width:200,
								 required:true,
								 formatter:dateformatter" />
                </td>
            </tr>
            <tr>
                <td class="control-label">   @Html.DisplayNameFor(model => model.CreatedDate)  </td>
                <td>
                    <input id="@Html.IdFor(model => model.CreatedDate)"
                           name="@Html.NameFor(model => model.CreatedDate)"
                           tabindex="4"
                           class="easyui-datebox"
                           type="text"
                           value="@Html.ValueFor(model => model.CreatedDate)"
                           data-options="prompt:'创建时间',
								 label:'',
                                width:200,
								 required:false,
								 formatter:dateformatter" />
                </td>
                <td class="control-label">   @Html.DisplayNameFor(model => model.CreatedBy)  </td>
                <td>
                    <input id="@Html.IdFor(model => model.CreatedBy)"
                           name="@Html.NameFor(model => model.CreatedBy)"
                           value="@Html.ValueFor(model => model.CreatedBy)"
                           tabindex="5"
                           class="easyui-textbox"
                           type="text"
                           data-options="prompt:'创建用户',
								 label:'',
                                width:200,
								 required:false ,validType:'length[0,20]'" />
                </td>
            </tr>
            <tr>
                <td class="control-label">   @Html.DisplayNameFor(model => model.LastModifiedDate)  </td>
                <td>
                    <input id="@Html.IdFor(model => model.LastModifiedDate)"
                           name="@Html.NameFor(model => model.LastModifiedDate)"
                           tabindex="6"
                           class="easyui-datebox"
                           type="text"
                           value="@Html.ValueFor(model => model.LastModifiedDate)"
                           data-options="prompt:'最后更新时间',
								 label:'',
                                width:200,
								 required:false,
								 formatter:dateformatter" />
                </td>
                <td class="control-label">   @Html.DisplayNameFor(model => model.LastModifiedBy)  </td>
                <td>
                    <input id="@Html.IdFor(model => model.LastModifiedBy)"
                           name="@Html.NameFor(model => model.LastModifiedBy)"
                           value="@Html.ValueFor(model => model.LastModifiedBy)"
                           tabindex="7"
                           class="easyui-textbox"
                           type="text"
                           data-options="prompt:'最后更新用户',
								 label:'',
                                width:200,
								 required:false ,validType:'length[0,20]'" />
                </td>
            </tr>
            <tfoot>
                <tr>
                <tr>
            </tfoot>
        </table>
    </form>

    <!--输出form表单界面-->
    <!--========================================================================================-->
    <!-- details tabs -->
    <div class="tabs-container">
        <!-- Nav tabs -->
        <ul class="nav nav-tabs bordered">
            <li class="active"><a data-toggle="tab" href="#tab-orderdetails"> OrderDetails</a></li>

        </ul>
        <!-- Tab panes -->
        <div class="tab-content padding-10">
            <div id="tab-orderdetails" class="tab-pane active">
                <div class="panel-body">
                    <div class="table-responsive">
                        <table id="orderdetails_datagrid" class="easyui-datagrid"
                               style="width:auto;height:300px"
                               data-options="
                            rownumbers:true,
                            iconCls: 'fa fa-list',
                            remoteFilter: false,
                            singleSelect: true,
                            toolbar: '#orderdetails_toolbar',
                            method: 'get',
                            onClickCell: orderdetails_onClickCell,
                            pagination: 'true'
                    ">
                            <thead>
                                <tr>
                                    @*<th data-options="field:'ck',checkbox:true"></th>*@
                                    @*<th data-options="field:'Id',width:80"> Id </th>*@
                                    <th data-options="field:'ProductId',width:100,
												formatter:function(value,row){
													return row.ProductName;
												},
												editor:{
													type:'combobox',
													options:{
														valueField:'Id',
														textField:'Name',
														method:'get',
														url:'/Orders/GetProducts',
														required:true ,precision:0
														}
												}">产品</th>
                                    <th data-options="field:'Qty',width:100,align:'right',editor:{type:'numberbox',options:{required:true ,precision:0} } ,sortable:true,resizable:true ">数量</th>
                                    <th data-options="field:'Price',width:100,align:'right',editor:{type:'numberbox',options:{required:true ,precision:2} } ,sortable:true,resizable:true ">单价</th>
                                    <th data-options="field:'Amount',width:100,align:'right',editor:{type:'numberbox',options:{required:true ,precision:2} } ,sortable:true,resizable:true ">金额</th>
                                </tr>
                            </thead>
                        </table>
                        <div id="orderdetails_toolbar" style="height:auto">
                            <a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'icon-plus',plain:true" onclick="orderdetails_createitem()">新增</a>
                            <a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'icon-remove',plain:true" onclick="orderdetails_removeitem()">删除</a>
                            <a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'icon-save',plain:true" onclick="orderdetails_saveitem()">保存</a>
                            <a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'icon-undo',plain:true" onclick="orderdetails_reject()">取消</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!--end details tabs -->
</div>


<script type="text/javascript">
    //load data by foreign key
    function loadData(id, data) {
        $('#order_form').form('load', data);
        $orderdetailsdg.datagrid('reload', '/OrderDetails/GetDataByOrderId?orderid=' + id);
        $orderdetailsdg.datagrid('resize');

    }
    //save item
    function saveitem() {
        if ($('#order_form').form('enableValidation').form('validate')) {
            var item = $('#order_form').serializeObject();

            $.post("/Orders/Edit", item, function (response) {
                //console.log(response);
                if (response.success) {
                    $.messager.alert("提示", "保存成功！");
                    $('#detailswindow').window('close');

                } else {
                    $.messager.alert("错误", "保存失败！" + response.err, "error");
                }
            }, "json").fail(function (response) {
                //console.log(response);
                $.messager.alert("错误", "保存失败！", "error");
                //$dg.datagrid("reload");
            });
        }
    }
    // cancel
    function cancelitem() {
        $('#detailswindow').window('close');
    }
    // reload
    function refreshitem() {
        $('#detailswindow').window('close');
    }
    //easyui window resize function
    function resize() {

    }


    //-----------------------------------------------------------------------
    // details datagrid functions
    //-----------------------------------------------------------------------
    function filterByOrderId(orderid) {
        var value = orderid;

        $orderdetailsdg.datagrid("removeFilterRule", "OrderId");
        $orderdetailsdg.datagrid("addFilterRule", {
            field: "OrderId",
            op: "equal",
            value: value
        });
        $orderdetailsdg.datagrid("doFilter");

    }

    //--------------------------------------------------------------------
    // #orderdetails_datagrid functions
    //--------------------------------------------------------------------
    var $orderdetailsdg = $("#orderdetails_datagrid");

    var orderdetails_editIndex = undefined;
    function orderdetails_reload() {
        $orderdetailsdg.datagrid("reload");
    }
    function orderdetails_endEditing() {
        if (orderdetails_editIndex == undefined) { return true }
        if ($orderdetailsdg.datagrid("validateRow", orderdetails_editIndex)) {
            var ed = $orderdetailsdg.datagrid("getEditor", { index: orderdetails_editIndex, field: "ProductId" });
            var ProductName = $(ed.target).combobox("getText");
            var ProductId = $(ed.target).combobox("getValue");

            $orderdetailsdg.datagrid("getRows")[orderdetails_editIndex]["ProductName"] = ProductName;
            $orderdetailsdg.datagrid("getRows")[orderdetails_editIndex]["ProductId"] = ProductId;


            $orderdetailsdg.datagrid("endEdit", orderdetails_editIndex);
            orderdetails_editIndex = undefined;


            return true;
        } else {
            return false;
        }
    }
    function orderdetails_onClickCell(index, field) {
        if (orderdetails_editIndex != index) {
            if (orderdetails_endEditing()) {
                $orderdetailsdg.datagrid("selectRow", index)
                    .datagrid("beginEdit", index);
                var ed = $orderdetailsdg.datagrid("getEditor", { index: index, field: field });
                if (ed) {
                    ($(ed.target).data("textbox") ? $(ed.target).textbox("textbox") : $(ed.target)).focus();
                }
                orderdetails_editIndex = index;
            } else {
                $orderdetailsdg.datagrid("selectRow", orderdetails_editIndex);
            }
        }
    }
    function orderdetails_createitem() {
        if (orderdetails_endEditing()) {
            var order = $dg.datagrid("getSelected");

            $orderdetailsdg.datagrid("appendRow", { OrderId: order.Id });
            orderdetailseditIndex = $orderdetailsdg.datagrid("getRows").length - 1;
            $orderdetailsdg.datagrid("selectRow", orderdetails_editIndex)
                .datagrid("beginEdit", orderdetails_editIndex);
        }
    }
    function orderdetails_removeitem() {
        if (orderdetails_editIndex == undefined) { return }
        $orderdetailsdg.datagrid("cancelEdit", orderdetails_editIndex)
            .datagrid("deleteRow", orderdetails_editIndex);
        orderdetailseditIndex = undefined;
    }

    function orderdetails_reject() {
        $orderdetailsdg.datagrid("rejectChanges");
        orderdetails_editIndex = undefined;
    }
    function orderdetails_getChanges() {
        var rows = $orderdetailsdg.datagrid("getChanges");
        alert(rows.length + " rows are changed!");
    }
    function orderdetails_saveitem() {
        if (orderdetails_endEditing()) {
            if ($orderdetailsdg.datagrid("getChanges").length) {
                var inserted = $orderdetailsdg.datagrid("getChanges", "inserted");
                var deleted = $orderdetailsdg.datagrid("getChanges", "deleted");
                var updated = $orderdetailsdg.datagrid("getChanges", "updated");
                var effectRow = new Object();
                if (inserted.length) {
                    effectRow.inserted = inserted;
                }
                if (deleted.length) {
                    effectRow.deleted = deleted;
                }
                if (updated.length) {
                    effectRow.updated = updated;
                }
                //console.log(JSON.stringify(effectRow));
                $.post("/OrderDetails/SaveData", effectRow, function (response) {
                    //console.log(response);
                    if (response.Success) {
                        $.messager.alert("提示", "提交成功！");
                        $orderdetailsdg.datagrid("acceptChanges");
                        $orderdetailsdg.datagrid("reload");
                    }
                }, "json").fail(function (response) {
                    //console.log(response);
                    $.messager.alert("错误", "提交错误了！", "error");

                });

            }

            //$orderdetailsdg.datagrid("acceptChanges");
        }
    }

    $(function () {

        $orderdetailsdg.datagrid("enableFilter", [
        ]);

        //filterByOrderId(-1);
    })







</script>
