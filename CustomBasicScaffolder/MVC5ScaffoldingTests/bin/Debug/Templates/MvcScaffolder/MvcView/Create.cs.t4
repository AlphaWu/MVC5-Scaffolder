<#@ template language="C#" HostSpecific="True" #>
<#@ output extension=".cshtml" #>
<#@ include file="Imports.include.t4" #>
@model <#= ViewDataTypeName #>
<#
	var PageTitle =(string.IsNullOrEmpty(ProgramTitle)==true?ControllerRootName:ProgramTitle);
// "form-control" attribute is only supported for all EditorFor() in System.Web.Mvc 5.1.0.0 or later versions, except for checkbox, which uses a div in Bootstrap
string boolType = "System.Boolean";
Version requiredMvcVersion = new Version("5.1.0.0");
bool isControlHtmlAttributesSupported = MvcVersion >= requiredMvcVersion;
// The following chained if-statement outputs the file header code and markup for a partial view, a view using a layout page, or a regular view.
if(IsPartialView) {
#>

<#
} else if(IsLayoutPageSelected) {
#>

@{
    ViewBag.Title = "<#= PageTitle #> | <#=  ViewName #>";
<#
if (!String.IsNullOrEmpty(LayoutPageFile)) {
#>
    Layout = "<#= LayoutPageFile#>";
<#
}
#>
}



<#
} else {
#>

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title><#= PageTitle #> | <#=  ViewName #></title>
</head>
<body>
<#
    PushIndent("    ");
}
#>
<#
if (ReferenceScriptLibraries) {
#>
<#
    if (!IsLayoutPageSelected && IsBundleConfigPresent) {
#>
@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/jqueryval")

<#
    }
#>
<#
    else if (!IsLayoutPageSelected) {
#>
<script src="~/Scripts/jquery-<#= JQueryVersion #>.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>

<#
    }
#>

<#
}
#>
<#
    var modelName =  ModelMetadata.EntitySetName;
	var primaryKey = ModelMetadata.PrimaryKeys[0].PropertyName;
#>
<div class="row">
            <div class="col-md-12">
                <div class="ibox float-e-margins">
                    <div class="ibox-title">
                        <h5><#=  PageTitle #> form<small> create new <#=  modelName #></small></h5>
                        <div class="ibox-tools">
                            <a class="collapse-link">
                                <i class="fa fa-chevron-up"></i>
                            </a>
                             
                        </div>
                    </div>
                    <div class="ibox-content">
                 

@using (Html.BeginForm()) 
{
    <!--form toolbar-->
    <div id="form_toolbar" style="height:auto" class="datagrid-toolbar">

        <a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'icon-plus',plain:true" onclick="append()">新增</a>
        <a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'icon-remove',plain:true" onclick="removeit()">删除</a>
        <a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'icon-save',plain:true" onclick="accept()">保存</a>
        <a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'icon-undo',plain:true" onclick="reject()">取消</a>

        <a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'icon-paperclip',plain:true" onclick="importexcel()">EXCEL 导入</a>
        <a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'icon-download-alt',plain:true" onclick="exportexcel()">导出 Excel</a>
        <a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'icon-refresh',plain:true" onclick="reload()">刷新</a>
    </div>
    <!--form toolbar-->
       @*@Html.AntiForgeryToken()*@
  
  
		
      
		<div class="form-content">
		 
        @Html.Partial("<#= ViewPrefix #>EditForm")

		@Html.ValidationSummary(true, "", new { @class = "text-danger" })
		</div>
	 
		 
}
    </div>
        </div>
    </div>
</div>
<#
if(IsLayoutPageSelected && ReferenceScriptLibraries && IsBundleConfigPresent) {
#>

@section Scripts {
 
     <script type="text/javascript">
     
    <#  if(GenerateMasterDetailRelationship  && OneToManyModelMetadata.Count >0) { 
		var primaryKeyVar = ModelTypeName.ToLower() + primaryKey.ToLower();
	#>
		var <#= primaryKeyVar #> = 0;
		var ObjectState = "Added";  
            <# foreach(var item in OneToManyModelMetadata) {
                var boostraptablevar = "$" + item.Key.ToLower()  + "datagrid";
                var detailnamevar=item.Key.ToLower();
            #>                     
             var <#= boostraptablevar #> = $('#<#=  detailnamevar #>_datagrid');
            <# } #>
            $(document).ready(function () {

                $('form').submit(function () {
					if (!$('form').valid())
						return false;
                    //var token = $('[name=__RequestVerificationToken]').val();
                    //var serializedForm = $(this).serialize();
                    var actionurl = $(this).attr('action');
                    <# foreach(var item in OneToManyModelMetadata) {
                        var boostraptablevar = "$" + item.Key.ToLower()  + "datagrid";
                        var detailnamevar=item.Key.ToLower();
                     #> 
						if (!<#= detailnamevar #>_endEditing())
								return false;                    
                        var <#= detailnamevar #> = <#= boostraptablevar #>.datagrid('getChanges');
                    <# } #>
                    
                     var newitem = {
                        <# foreach(var property  in  ModelMetadata.Properties.Where(n=>true ).OrderByDescending(n=>n.Scaffold).ThenBy(n=>n.IsForeignKey).ThenBy(n=>n.PropertyName)) {
                            if(property.IsPrimaryKey) { #>
								//primaryKey
								<#= property.PropertyName #>: <#= primaryKeyVar #>,
                        <# } else if (property.AssociationDirection == AssociationDirection.OneToMany) { #>
								//detailTables
                                <#= property.PropertyName #>: <#= property.PropertyName.ToLower() #> ,
                        <# } else if(property.IsForeignKey)  { #>
								<#= property.PropertyName #>: $('#<#= property.PropertyName #> :selected','form').val(),
						<# } else if (property.AssociationDirection != AssociationDirection.ManyToOne) { #>
                                <#= property.PropertyName #>: $('#<#= property.PropertyName #>', 'form').val(),
                        <#
                             }
                          }
                        #>
                        ObjectState:ObjectState 
                    };
                    $.ajax({
                        url: actionurl,
                        type: "POST",
                        dataType: "json",
                        contentType: "application/json; charset=utf-8",
                        data: JSON.stringify(newitem),
                        success: function (result) {
                            if (result.success) {
                                self.location = "/<#= ControllerRootName #>/Index";
                            } else {
                                alert(result.err);
                            }
                            
                        },
                        error: function (result) {
                            console.log(result.statusText + result.responseText);
                            alert(result.statusText + result.responseText);
                        }
                    });
                    return false;
                    

                });
            });
  <#   } #>
        </script>


}
<#
}
#>
<#
else if(IsLayoutPageSelected && ReferenceScriptLibraries) {
#>

<script src="~/Scripts/jquery-<#= JQueryVersion #>.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<#
}
#>
<#
// The following code closes the tag used in the case of a view using a layout page and the body and html tags in the case of a regular view page
#>
<#
if(!IsPartialView && !IsLayoutPageSelected) {
    ClearIndent();
#>
</body>
</html>
<#
}
#>
<#@ include file="ModelMetadataFunctions.cs.include.t4" #>