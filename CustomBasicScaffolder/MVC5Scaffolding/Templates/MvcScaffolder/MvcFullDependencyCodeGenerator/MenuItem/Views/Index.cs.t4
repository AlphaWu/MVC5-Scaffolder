<#@ template language="C#" HostSpecific="True" #>
<#@ output extension=".cshtml" #>
<#@ parameter type="System.String" name="DefaultNamespace" #>

@using <#= DefaultNamespace #>.Models 
@model IEnumerable<MenuItem>
@{
    ViewBag.Title = "MenuItems";
}


<div class="row">
    <div class="col-lg-12">
        <div class="ibox float-e-margins">
            <div class="ibox-title">
                <h5>MenuItems Data</h5>
                <div class="ibox-tools">
                    <a class="collapse-link">
                        <i class="fa fa-chevron-up"></i>
                    </a>
                    <a class="dropdown-toggle" data-toggle="dropdown" href="#">
                        <i class="fa fa-wrench"></i>
                    </a>
                    <ul class="dropdown-menu dropdown-user">
                        <li>
                            <a href="table_data_tables.html#">Config option 1</a>
                        </li>
                        <li>
                            <a href="table_data_tables.html#">Config option 2</a>
                        </li>
                    </ul>
                    <a class="close-link">
                        <i class="fa fa-times"></i>
                    </a>
                </div>
            </div>
            <div class="ibox-content">

                <div class="table-responsive">
           
 
       <table id="menuitems_datagrid" class="easyui-datagrid" title="MenuItems DataGrid" style="width:auto;height:auto"
                   data-options="
                 rownumbers:true,
                 
                remoteFilter: true,
                singleSelect: true,
                toolbar: '#menuitems_toolbar',
                url: '/MenuItems/GetData',
                method: 'get',
                onClickCell: onClickCell,
                pagination: 'true'
                   ">
                <thead>
                    <tr>
                        @*<th data-options="field:'ck',checkbox:true"></th>*@
        			<th data-options="field:'Id',width:80">@Html.DisplayNameFor(model => model.Id)</th>
                
				     <th data-options="field:'Title',width:140,editor:{type:'textbox',options:{required:false} } ">@Html.DisplayNameFor(model => model.Title)</th>
		
                
				     <th data-options="field:'Description',width:140,editor:{type:'textbox',options:{required:false} } ">@Html.DisplayNameFor(model => model.Description)</th>
		
                
				     <th data-options="field:'Code',width:140,editor:{type:'textbox',options:{required:false} } ">@Html.DisplayNameFor(model => model.Code)</th>
		
                
				     <th data-options="field:'Url',width:140,editor:{type:'textbox',options:{required:false} } ">@Html.DisplayNameFor(model => model.Url)</th>
		
                
					 <th data-options="field:'IsEnabled',width:120,editor:'textbox' ">@Html.DisplayNameFor(model => model.IsEnabled)</th>
		
                			<th data-options="field:'ParentId',width:100,
                        formatter:function(value,row){
                            return row.ParentTitle;
                        },
                        editor:{
                            type:'combobox',
                            options:{
                                valueField:'Id',
                                textField:'Title',
                                method:'get',
                                url:'/MenuItems/GetMenuItems',
                                required:false
                            }
                        }">@Html.DisplayNameFor(model => model.ParentId)</th>

           
               
    </tr>
    </thead>
 

</table>
	<div id="menuitems_toolbar" style="height:auto">
                <a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'icon-add',plain:true" onclick="append()">Append</a>
                <a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'icon-remove',plain:true" onclick="removeit()">Remove</a>
                <a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'icon-save',plain:true" onclick="accept()">Accept</a>
                <a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'icon-undo',plain:true" onclick="reject()">Reject</a>
                <a href="javascript:void(0)" class="easyui-linkbutton" data-options="iconCls:'icon-search',plain:true" onclick="getChanges()">GetChanges</a>
            </div>
				</div>

            </div>
        </div>
    </div>
</div>
@section Scripts {
    <script type="text/javascript">
         var $dg = $('#menuitems_datagrid');
		 var editIndex = undefined;
        function endEditing() {
            if (editIndex == undefined) { return true }
            if ($dg.datagrid('validateRow', editIndex)) {

				                var ed = $dg.datagrid('getEditor', { index: editIndex, field: 'ParentId' });
                var parenttitle = $(ed.target).combobox('getText');
                var parentid = $(ed.target).combobox('getValue');
                //console.log(categoryname, categoryid);
                //console.log(1,$dg.datagrid('getRows')[editIndex]);
                $dg.datagrid('getRows')[editIndex]['ParentTitle'] =  parenttitle;
                $dg.datagrid('getRows')[editIndex]['ParentId'] = parentid;
                
                //console.log(2,$dg.datagrid('getRows')[editIndex]);

								$dg.datagrid('endEdit', editIndex);
                editIndex = undefined;

                
                return true;
            } else {
                return false;
            }
        }
        function onClickCell(index, field) {
            if (editIndex != index) {
                if (endEditing()) {
                    $dg.datagrid('selectRow', index)
                            .datagrid('beginEdit', index);
                    var ed = $dg.datagrid('getEditor', { index: index, field: field });
                    if (ed) {
                        ($(ed.target).data('textbox') ? $(ed.target).textbox('textbox') : $(ed.target)).focus();
                    }
                    editIndex = index;
                } else {
                    $dg.datagrid('selectRow', editIndex);
                }
            }
        }
        function append() {
            if (endEditing()) {
                $dg.datagrid('appendRow', { status: 'P' });
                editIndex = $dg.datagrid('getRows').length - 1;
                $dg.datagrid('selectRow', editIndex)
                        .datagrid('beginEdit', editIndex);
            }
        }
        function removeit() {
            if (editIndex == undefined) { return }
            $dg.datagrid('cancelEdit', editIndex)
                    .datagrid('deleteRow', editIndex);
            editIndex = undefined;
        }
        function accept() {
            if (endEditing()) {
                if ($dg.datagrid('getChanges').length) {
                    var inserted = $dg.datagrid('getChanges', "inserted");
                    var deleted = $dg.datagrid('getChanges', "deleted");
                    var updated = $dg.datagrid('getChanges', "updated");
                    var effectRow = new Object();
                    if (inserted.length) {
                        effectRow.inserted = inserted;
                    }
                    if (deleted.length) {
                        effectRow.deleted = deleted;
                    }
                    if (updated.length) {
                        effectRow.updated = updated;
                    }
                    console.log(JSON.stringify(effectRow));
                    $.post("/MenuItems/SaveData", effectRow, function (rsp) {
                        console.log(rsp);
                        if (rsp.Success) {
                            $.messager.alert("提示", "提交成功！");
                            $dg.datagrid('acceptChanges');
                        }
                    }, "JSON").error(function () {
                        $.messager.alert("错误", "提交错误了！",'error');
                      
                    });
              
                }

                $dg.datagrid('acceptChanges');
            }
        }
        function reject() {
            $dg.datagrid('rejectChanges');
            editIndex = undefined;
        }
        function getChanges() {
            var rows = $dg.datagrid('getChanges');
            alert(rows.length + ' rows are changed!');
        }


		 $(function () {
		  
           $dg.datagrid('enableFilter');
        })
     </script>
}